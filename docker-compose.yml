version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: clara-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-clara}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-clara_secure_password}
      POSTGRES_DB: ${DB_NAME:-claraverse}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-clara}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - clara-network

  backend:
    build:
      context: ./py_backend
      dockerfile: Dockerfile
    container_name: clara-backend
    environment:
      - PORT=${BACKEND_PORT:-5000}
      - HOST=0.0.0.0
      - PYTHONUNBUFFERED=1
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-claraverse}
      - DB_USER=${DB_USER:-clara}
      - DB_PASSWORD=${DB_PASSWORD:-clara_secure_password}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "${BACKEND_PORT:-5000}:${BACKEND_PORT:-5000}"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT:-5000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - clara-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://backend:${BACKEND_PORT:-5000}
        - VITE_DB_URL=http://backend:${BACKEND_PORT:-5000}
    container_name: clara-frontend
    environment:
      - PORT=${PORT:-80}
      - VITE_API_URL=http://backend:${BACKEND_PORT:-5000}
    ports:
      - "${PORT:-80}:${PORT:-80}"
    depends_on:
      - backend
    networks:
      - clara-network

volumes:
  postgres_data:

networks:
  clara-network:
    driver: bridge